<?xml version="1.0"?><st-source><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '9:16:34 am')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 9:16:34 am on November 12, 2023."</do-it><do-it>Alumno organization addCategory: #getDni</do-it><methods><class-id>Core.Alumno</class-id> <category>getDni</category><body package="BOSS" selector="getDni">getDni^dni</body></methods><do-it>Alumno organization addCategory: #setDni</do-it><component-created><name>Arbor GIF Reader Writer</name> <type>package</type></component-created><parcel-loaded><name>Arbor GIF Reader Writer</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'parcels' 'ArborGIFReaderWriter.pcl'))</filename></parcel-loaded><component-created><name>Arbor Help System Widget Help Core</name> <type>package</type></component-created><parcel-loaded><name>Arbor Help System Widget Help Core</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'parcels' 'HelpSystemWidgetHelpCore.pcl'))</filename></parcel-loaded><component-created><name>Arbor Help System Core</name> <type>package</type></component-created><parcel-loaded><name>Arbor Help System Core</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'parcels' 'HelpSystemCore.pcl'))</filename></parcel-loaded><component-created><name>Arbor Hypertext</name> <type>package</type></component-created><parcel-loaded><name>Arbor Hypertext</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'parcels' 'Hypertext.pcl'))</filename></parcel-loaded><component-created><name>Arbor Help System Outline Help Core</name> <type>package</type></component-created><parcel-loaded><name>Arbor Help System Outline Help Core</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'parcels' 'HelpSystemOutlineHelpCore.pcl'))</filename></parcel-loaded><component-created><name>VWHelp</name> <type>package</type></component-created><parcel-loaded><name>VWHelp</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'parcels' 'VWHelp.pcl'))</filename></parcel-loaded><methods><class-id>Core.Alumno</class-id> <category>setDni</category><body package="BOSS" selector="setDni">setDni|dniIngresado|dni := dniIngresado</body></methods><component-created><name>Adapt5-Example</name> <type>package</type></component-created><parcel-loaded><name>Adapt5-Example</name> <filename>(OS.LogicalFilename fromComponents: #('c:\' 'Program Files (x86)' 'Cincom' 'vw7.6nc' 'examples' 'Adapt5.pcl'))</filename></parcel-loaded><component-created><name>Adapt6-Example</name> <type>package</type></component-created><parcel-loaded><name>Adapt6-Example</name> <filename>(OS.LogicalFilename fromComponents: #('c:\' 'Program Files (x86)' 'Cincom' 'vw7.6nc' 'examples' 'Adapt6.pcl'))</filename></parcel-loaded><component-created><name>Dependency-Example</name> <type>package</type></component-created><parcel-loaded><name>Dependency-Example</name> <filename>(OS.LogicalFilename fromComponents: #('c:\' 'Program Files (x86)' 'Cincom' 'vw7.6nc' 'examples' 'Depend.pcl'))</filename></parcel-loaded><component-created><name>Font1-Example</name> <type>package</type></component-created><parcel-loaded><name>Font1-Example</name> <filename>(OS.LogicalFilename fromComponents: #('c:\' 'Program Files (x86)' 'Cincom' 'vw7.6nc' 'examples' 'Font1.pcl'))</filename></parcel-loaded><do-it>Alumno organization addCategory: #getCursadas</do-it><methods><class-id>Core.Alumno</class-id> <category>getCursadas</category><body package="BOSS" selector="getCursadas">getCursadas^cursadas</body></methods><methods><class-id>Core.Alumno</class-id> <category>setDni</category><body package="BOSS" selector="setDni:">setDni: unDni    dni := unDni</body></methods><remove-selector><class-id>Core.Alumno</class-id> <selector>setDni</selector></remove-selector><do-it>Alumno organization addCategory: #getFinales</do-it><methods><class-id>Core.Alumno</class-id> <category>getFinales</category><body package="BOSS" selector="getFinales">getFinales^finales</body></methods><methods><class-id>Core.Alumno</class-id> <category>getFinales</category><body package="BOSS" selector="getFinales">getFinales		^finales</body></methods><methods><class-id>Core.Alumno</class-id> <category>getDni</category><body package="BOSS" selector="getDni">getDni		^dni</body></methods><methods><class-id>Core.Alumno</class-id> <category>getCursadas</category><body package="BOSS" selector="getCursadas">getCursadas		^cursadas</body></methods><methods><class-id>Core.Alumno</class-id> <category>setDni</category><body package="BOSS" selector="setDni:">setDni: unDni		dni := unDni</body></methods><methods><class-id>Core.Alumno</class-id> <category>setDni</category><body package="BOSS" selector="setDni:">setDni: unDni		dni := unDni</body></methods><do-it>Alumno class organization addCategory: #'accessing instances and variables'</do-it><do-it>Alumno class organization removeCategory: #'accessing instances and variables'</do-it><methods><class-id>Core.Alumno</class-id> <category>setDni</category><body package="BOSS" selector="setDni:">setDni: unDni	dni := unDni</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '10:07:44 am')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 10:07:44 am on November 12, 2023."</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '10:20:20 am')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 10:20:20 am on November 12, 2023."</do-it><do-it>'abc' reverse</do-it><do-it>'abc' reverse</do-it><do-it>'abc' reverse</do-it><do-it>'abc' reverse</do-it><do-it>'abc' reverse</do-it><do-it>'abc' reverse</do-it><do-it>'abc' reverse</do-it><do-it>'abc' reverse</do-it><do-it>'abc' reverse</do-it><do-it>'abc' reverse</do-it><do-it>'abc' reverse</do-it><do-it>alumno := Alumno new.</do-it><do-it>alumno getDni</do-it><do-it>alumno := Alumno new.</do-it><do-it>alumno setDni:123</do-it><do-it>alumno getDni</do-it><do-it>alumno := Alumno new.alumno setDni:123. alumno getDni.</do-it><do-it>Alumno organization addCategory: #setCursadas</do-it><methods><class-id>Core.Alumno</class-id> <category>setCursadas</category><body package="BOSS" selector="setCursadas:">setCursadas: cursadasNuevoArray		cursadas := cursadasNuevoArray</body></methods><do-it>Alumno organization addCategory: #setFinales</do-it><methods><class-id>Core.Alumno</class-id> <category>setFinales</category><body package="BOSS" selector="setFinales:">setFinales: finalesNuevoArray		cursadas := finalesNuevoArray</body></methods><methods><class-id>Core.Alumno</class-id> <category>setFinales</category><body package="BOSS" selector="setFinales:">setFinales: finalesNuevoArray		finales := finalesNuevoArray</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '10:36:02 am')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 10:36:02 am on November 12, 2023."</do-it><do-it>Cursada organization addCategory: #getAño</do-it><methods><class-id>Core.Cursada</class-id> <category>getAño</category><body package="BOSS" selector="getAño">getAño		^año</body></methods><do-it>Cursada organization addCategory: #setAño</do-it><methods><class-id>Core.Cursada</class-id> <category>setAño</category><body package="BOSS" selector="setAño:">setAño: añoNuevo		año := añoNuevo</body></methods><do-it>Cursada organization addCategory: #getMateria</do-it><methods><class-id>Core.Cursada</class-id> <category>getMateria</category><body package="BOSS" selector="getMateria">getMateria		^materia</body></methods><do-it>Cursada organization addCategory: #setMateria</do-it><methods><class-id>Core.Cursada</class-id> <category>setMateria</category><body package="BOSS" selector="setMateria:">setMateria: nuevaMateria		materia := nuevaMateria</body></methods><do-it>Cursada organization addCategory: #getResultado</do-it><methods><class-id>Core.Cursada</class-id> <category>getResultado</category><body package="BOSS" selector="getResultado">getResultado		^resultado</body></methods><do-it>Cursada organization addCategory: #setResultado</do-it><methods><class-id>Core.Cursada</class-id> <category>setResultado</category><body package="BOSS" selector="setResultado:">setResultado: resultadoNuevo		resultado := resultadoNuevo</body></methods><do-it>Cursada organization addCategory: #getCalificacion</do-it><methods><class-id>Core.Cursada</class-id> <category>getCalificacion</category><body package="BOSS" selector="getCalificacion">getCalificacion		^calificacion</body></methods><do-it>Cursada organization addCategory: #setCalificacion</do-it><methods><class-id>Core.Cursada</class-id> <category>setCalificacion</category><body package="BOSS" selector="setCalificacion:">setCalificacion: calificacionNueva		calificacion := calificacionNueva</body></methods><do-it>Final organization addCategory: #getVeces</do-it><methods><class-id>Core.Final</class-id> <category>getVeces</category><body package="BOSS" selector="getVeces">getVeces		^veces</body></methods><do-it>Final organization addCategory: #setVeces</do-it><methods><class-id>Core.Final</class-id> <category>setVeces</category><body package="BOSS" selector="setVeces:">setVeces: vecesNuevo		veces := vecesNuevo</body></methods><do-it>Final organization addCategory: #getMateria</do-it><methods><class-id>Core.Final</class-id> <category>getMateria</category><body package="BOSS" selector="getMateria">getMateria		^materia</body></methods><do-it>Final organization addCategory: #setMateria</do-it><methods><class-id>Core.Final</class-id> <category>setMateria</category><body package="BOSS" selector="setMateria:">setMateria: materiaNuevo		materia := materiaNuevo</body></methods><do-it>FinalAprobado organization addCategory: #getMateria</do-it><methods><class-id>Core.FinalAprobado</class-id> <category>getMateria</category><body package="BOSS" selector="getMateria">getMateria		^materia</body></methods><do-it>FinalAprobado organization addCategory: #setMateria</do-it><methods><class-id>Core.FinalAprobado</class-id> <category>setMateria</category><body package="BOSS" selector="setMateria:">setMateria: materiaNueva		materia := materiaNueva</body></methods><do-it>FinalAprobado organization addCategory: #setVeces</do-it><methods><class-id>Core.FinalAprobado</class-id> <category>setVeces</category><body package="BOSS" selector="setVeces:">setVeces: vecesNuevo		veces := vecesNuevo</body></methods><do-it>FinalAprobado organization addCategory: #getVeces</do-it><methods><class-id>Core.FinalAprobado</class-id> <category>getVeces</category><body package="BOSS" selector="getVeces">getVeces		^veces</body></methods><do-it>FinalAprobado organization addCategory: #setFecha</do-it><methods><class-id>Core.FinalAprobado</class-id> <category>setFecha</category><body package="BOSS" selector="setFecha:">setFecha: fechaNueva		fecha := fechaNueva</body></methods><do-it>FinalAprobado organization addCategory: #getFecha</do-it><methods><class-id>Core.FinalAprobado</class-id> <category>getFecha</category><body package="BOSS" selector="getFecha">getFecha	^fecha</body></methods><do-it>FinalAprobado organization addCategory: #getCalificacion</do-it><methods><class-id>Core.FinalAprobado</class-id> <category>getCalificacion</category><body package="BOSS" selector="getCalificacion">getCalificacion	^calificacion</body></methods><do-it>FinalAprobado organization addCategory: #setCalificacion</do-it><methods><class-id>Core.FinalAprobado</class-id> <category>setCalificacion</category><body package="BOSS" selector="setCalificacion:">setCalificacion: calificacionNueva	calificacion := calificacionNueva</body></methods><do-it>FinalAprobado organization addCategory: #getTipo</do-it><methods><class-id>Core.FinalAprobado</class-id> <category>getTipo</category><body package="BOSS" selector="getTipo">getTipo	^tipo</body></methods><do-it>FinalAprobado organization addCategory: #setTipo</do-it><methods><class-id>Core.FinalAprobado</class-id> <category>setTipo</category><body package="BOSS" selector="setTipo:">setTipo: tipoNuevo	tipo := tipoNuevo</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '11:05:37 am')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 11:05:37 am on November 12, 2023."</do-it><do-it>FinalNoAprobado organization addCategory: #getVeces</do-it><methods><class-id>Core.FinalNoAprobado</class-id> <category>getVeces</category><body package="BOSS" selector="getVeces">getVeces	^veces</body></methods><do-it>FinalNoAprobado organization addCategory: #setVeces</do-it><methods><class-id>Core.FinalNoAprobado</class-id> <category>setVeces</category><body package="BOSS" selector="setVeces:">setVeces: vecesNueva	veces := vecesNueva</body></methods><do-it>FinalNoAprobado organization addCategory: #getMateria</do-it><methods><class-id>Core.FinalNoAprobado</class-id> <category>getMateria</category><body package="BOSS" selector="getMateria">getMateria	^materia</body></methods><do-it>FinalNoAprobado organization addCategory: #setMateria</do-it><methods><class-id>Core.FinalNoAprobado</class-id> <category>setMateria</category><body package="BOSS" selector="setMateria:">setMateria: materiaNueva	materia := materiaNueva</body></methods><do-it>FinalNoAprobado organization addCategory: #getAñoPiensaRendir</do-it><methods><class-id>Core.FinalNoAprobado</class-id> <category>getAñoPiensaRendir</category><body package="BOSS" selector="getAñoPiensaRendir">getAñoPiensaRendir	^añoPiensaRendir</body></methods><do-it>FinalNoAprobado organization addCategory: #setAñoPiensaRendir</do-it><methods><class-id>Core.FinalNoAprobado</class-id> <category>setAñoPiensaRendir</category><body package="BOSS" selector="setAñoPiensaRendir:">setAñoPiensaRendir: añoNuevo	añoPiensaRendir := añoNuevo</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '11:11:17 am')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 11:11:17 am on November 12, 2023."</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '11:12:30 am')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 11:12:30 am on November 12, 2023."</do-it><do-it>cursada := Cursada new.cursada getAño.cursada setAño: 2023.cursada getAño.</do-it><do-it>cursada := Cursada new.cursada getAño.</do-it><do-it>cursada setAño: 2023.cursada getAño. </do-it><do-it>cursada getAño.</do-it><do-it>cursada getAño.</do-it><do-it>cursada getAño.</do-it><do-it>cursada getAño.</do-it><do-it>cursada getAño.</do-it><do-it>cursada getAño.</do-it><do-it>cursada setAño: 2023.cursada getAño.</do-it><do-it>cursada setAño: 2023.cursada getAño.</do-it><do-it>cursada setAño: 2023.cursada getAño.</do-it><do-it>cursada setAño: 2023.cursada getAño.</do-it><do-it>cursada setAño: 2023.cursada getAño.</do-it><do-it>cursada := Cursada new.cursada getAño.cursada setAño: 2023.cursada getAño.</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '11:51:48 am')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 11:51:48 am on November 12, 2023."</do-it><do-it>alumno := Alumno new.alumno setDni:123. alumno getDni.</do-it><do-it>datos := Collection new.</do-it><do-it>alumno := Alumno new.alumno setDni:123. alumno getDni.cursada := Cursada new.cursada getAño.cursada setAño: 2023.cursada getAño. </do-it><do-it>datos := Collection new.</do-it><methods><class-id>Core.Collection</class-id> <category>enumerating</category><body package="Collections-Abstract" selector="do:">do: aBlockClosure 	self halt</body></methods><do-it>alumno := Alumno new.alumno setDni:123. alumno getDni.cursada := Cursada new.cursada getAño.cursada setAño: 2023.cursada getAño.  </do-it><do-it>alumno := Alumno new.alumno setDni:123. alumno getDni.</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '1:03:18 pm')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 1:03:18 pm on November 12, 2023."</do-it><do-it>Array</do-it><do-it>Array</do-it><do-it>Transcript show: 'hola'.</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '1:39:29 pm')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 1:39:29 pm on November 12, 2023."</do-it><do-it>| sabores |sabores := OrderedCollection new.saboresadd: 'Vanilla';add: 'Chocolate';add: 'Frutilla';add: 'Limón';add: 'Dulce de leche'.^sabores</do-it><do-it>alumno := Alumno new.alumno setDni:123. alumno getDni.</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '1:54:07 pm')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 1:54:07 pm on November 12, 2023."</do-it><do-it>alumno := Alumno new.alumno setDni:123. alumno getDni.</do-it><do-it>alumno1 := Alumno new.alumno1 setDni: 123.alumno2 := Alumno new.alumno2 setDni: 456.</do-it><do-it>alumno1 := Alumno new.alumno1 setDni: 123.alumno2 := Alumno new.alumno2 setDni: 456.</do-it><do-it>arregloDeAlumnos := #(alumno1 alumno2).</do-it><do-it>alumno1 := Alumno new.alumno1 setDni: 123.alumno2 := Alumno new.alumno2 setDni: 456.</do-it><do-it>arregloDeAlumnos := #(alumno1 alumno2).</do-it><do-it>nombre := Dialog request: ' Cómo se llama?' initialAnswer: ' '.</do-it><do-it>nombre := Dialog request: ' Cómo se llama?' initialAnswer: ' '. ''</do-it><do-it>nombre := Dialog request: ' Cómo se llama?' initialAnswer: ' '. </do-it><do-it>dni := Dialog request: ' Ingrese su dni' initialAnswer: ' '.</do-it><do-it>alumno := Alumno new.dni := Dialog request: ' Ingrese su dni' initialAnswer: ' '.alumno setDni: dni.alumno getDni.</do-it><do-it>alumno := Alumno new.dni := Dialog request: ' Ingrese su dni' initialAnswer: ' '.alumno setDni: dni.alumno getDni.cursada := Cursada new.materia := Dialog request: ' Ingrese el nombre de la materia' initialAnswer: ' '.cursada setMateria: dni.cursada getMateria.</do-it><do-it>cursada := Cursada new.materia := Dialog request: ' Ingrese el nombre de la materia' initialAnswer: ' '.cursada setMateria: materia.cursada getMateria.</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 12, 2023' '2:45:08 pm')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 2:45:08 pm on November 12, 2023."</do-it><do-it>cursada := Cursada new.materia := Dialog request: ' Ingrese el nombre de la materia' initialAnswer: ' '.cursada setMateria: materia.cursada getMateria.</do-it><do-it>Transcript show: ('Error: Ingrese un año válido (entre 2009 y 2024)').</do-it><do-it>| divisor |divisor := (Dialog request: 'Enter divisor' initialAnswer: '0') asNumber.[10 / divisor] ensure: [Dialog warn: 'Division may or may not have succeeded.']</do-it><do-it>| divisor |divisor := (Dialog request: 'Enter divisor' initialAnswer: '0') asNumber.[10 / divisor] ensure: [Dialog warn: 'Division may or may not have succeeded.'] </do-it><do-it>| divisor |divisor := (Dialog request: 'Enter divisor' initialAnswer: '0') asNumber.[10 / divisor]	 ifCurtailed: [Dialog warn: 'Division by zero attempted.']	"Click Terminate in Exception window on exception. Note again the exception is not specified."</do-it><do-it>| divisor |divisor := (Dialog request: 'Enter divisor' initialAnswer: '0') asNumber.[10 / divisor]	 ifCurtailed: [Dialog warn: 'Division by zero attempted.']	"Click Terminate in Exception window on exception. Note again the exception is not specified."</do-it><do-it>| divisor |divisor := (Dialog request: 'Enter divisor' initialAnswer: '0') asNumber.[10 / divisor]	 ifCurtailed: [Dialog warn: 'Division by zero attempted.']	"Click Terminate in Exception window on exception. Note again the exception is not specified."</do-it><do-it>| divisor |divisor := (Dialog request: 'Enter divisor' initialAnswer: '0') asNumber.[10 / divisor]	 ifCurtailed: [Dialog warn: 'Division by zero attempted.']	"Click Terminate in Exception window on exception. Note again the exception is not specified."</do-it><do-it>| divisor |divisor := (Dialog request: 'Enter divisor' initialAnswer: '0') asNumber.[10 / divisor]	 ifCurtailed: [Dialog warn: 'Division by zero attempted.']</do-it><do-it>| array |array := Array with: 11 with: 22 with: 33.Transcript clear;	show: 'element at index 2 is ', (array at: 2) printString; cr.array at: 2 put: 20.Transcript show: 'new element at index 2 is ', (array at: 2) printString</do-it><do-it>#(1 2 3 4) 	do: [:each | 		MyTranscript show: each squared printString; cr].</do-it><do-it>#(1 5 2 89 34 53)	detect: [:each | each &gt; 28].</do-it><do-it>#(1 5 2 89 34 53)	detect: [:each | each &gt; 28].</do-it><do-it>#(1 2 3 4) 	do: [:each | 		MyTranscript show: each squared printString; cr].</do-it><do-it>#(1 5 2 89 34 53) 	select: [:each | each &gt; 28].</do-it><do-it>#(1 2 3 4) 	do: [:each | 		MyTranscript show: each squared printString; cr].</do-it><do-it>(Menu labels: 'OnceandOnlyOnce' ) startUp.</do-it><do-it>(Menu labels: 'OnceandOnlyOnce' ) startUp.</do-it><do-it>(Menu labels: 'OnceandOnlyOnce' ) startUp.</do-it><do-it>(Menu labels: 'OnceandOnlyOnce' ) startUp.</do-it><do-it>| menu |menu := Menu labels:'Once\and\Only\Once' withCRs.menu startUp. </do-it><do-it>| menu |menu := Menu 			labels: 'Binary\Octal\Decimal\Hexadecimal' withCRs			values: #( 2 8 10 16 ).16 printStringRadix: menu startUp </do-it><do-it>Dialog		choose: 'Are you tired yet?'		labels: #( 'absolutely' 'sort of' 'not really')		values: #(#yes #maybe #no)		default: #maybe.</do-it><do-it>| count |count := 0.[count &lt; 100] 	whileTrue: [count := count + 1].MyTranscript 	show: count printString; cr.</do-it><do-it>| count |count := 0.[count &lt; 100] 	whileTrue: [count := count + 1].MyTranscript 	show: count printString; cr.</do-it><do-it>| |Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' '.</do-it><do-it>| anio |anio := Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' '.</do-it><do-it>| anio |anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ') asInteger.</do-it><do-it>| anio |anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ') asInteger. [anio &lt; 2009 &amp; anio &gt; 2024] 	whileTrue: [anio := Dialog request: 'Error, Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' '.].</do-it><do-it>| anio |anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ') asNumber. [anio &lt; 2009 &amp; anio &gt; 2024] 	whileTrue: [anio := Dialog request: 'Error, Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' '.].MyTranscript 	show: anio printString; cr.</do-it><do-it>| anio |anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' )asInteger. [anio &lt; 2009 &amp; anio &gt; 2024] 	whileTrue: [anio := Dialog request: 'Error, Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' '.].</do-it><do-it>| count |count := 0.[count squared &gt; 100] 	whileFalse: [count := count + 1].MyTranscript 	show: count printString; cr.</do-it><do-it>| count |count := 0.[count &lt; 100] 	whileTrue: [count := count + 1].MyTranscript 	show: count printString; cr.</do-it><do-it>| count |count := 0.[count squared &gt; 100] 	whileFalse: [count := count + 1].MyTranscript 	show: count printString; cr.</do-it><do-it>| anio |anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) . [anio &lt; '2009' &amp; anio &gt; '2024'] 	whileTrue: [anio := (Dialog request: 'Error, Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ') ].</do-it><do-it>| anio |anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) . </do-it><do-it>| anio |anio := (Dialog request: 'Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: '') asInteger.</do-it><do-it>| anio |anio := (Dialog request: 'Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: '') asNumber.</do-it><methods><class-id>Core.SmallInteger</class-id> <category>As yet unclassified</category><body package="Magnitude-Numbers" selector="asString">asString	self halt</body></methods><do-it>| anio hola |hola := "hola"anio := (Dialog request: 'Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: '') asNumber.</do-it><do-it>alumno := Alumno new.cursada := Cursada new.</do-it><do-it>materia := Dialog request: ' Ingrese el nombre de la materia'.cursada setMateria: materia.</do-it><do-it>cursada getMateria.</do-it><do-it>Cursada organization addCategory: #prueba</do-it><methods><class-id>Core.Cursada</class-id> <category>prueba</category><body package="BOSS" selector="prueba">prueba		|anio|	anio := Dialog request:			' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)'		initialAnswer: ' '.	[(anio &lt; 2009 | anio) &gt; 2024]		whileTrue:			[anio := Dialog request:					' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)'				initialAnswer: ' ']</body></methods><methods><class-id>Core.Cursada</class-id> <category>prueba</category><body package="BOSS" selector="prueba">prueba		|anio|	anio := Dialog request:			' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)'		initialAnswer: ' '.	[(anio &lt; '2009' | anio) &gt; '2024']		whileTrue:			[anio := Dialog request:					' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)'				initialAnswer: ' ']</body></methods><do-it>| anio |anio := Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' .[anio &lt; '2009' | anio &gt; '2024'] whileTrue: [             anio := Dialog request: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' .       ].</do-it><remove-selector><class-id>Core.Cursada</class-id> <selector>prueba</selector></remove-selector><do-it>Cursada organization removeCategory: #prueba</do-it><do-it>| anio |anio := Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' .[anio &lt; '2009' | anio &gt; '2024'] whileTrue: [             anio := Dialog request: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' .       ].</do-it><do-it>| anio |anio := Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' .[anio &lt; '2009' | anio &gt; '2024'] whileTrue: [             anio := Dialog request: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' .       ].</do-it><do-it>dni := Dialog request: ' Ingrese su dni' initialAnswer: ' ' .alumno setDni: dni.</do-it><do-it>alumno getDni.</do-it><do-it>alumno getDni.</do-it><do-it>| anio |[anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.(anio isNil or: [anio between: 2009 and: 2024]  )] whileTrue: [             anio := (Dialog request: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.       ].</do-it><do-it>| anio |[anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.(anio isNil or: [anio between: 2009 and: 2024]  )] whileTrue: [             anio := (Dialog request: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.       ].</do-it><do-it>| anio |[anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.(anio isNil or: [anio between: 2009 and: 2024]  )] whileTrue: [             anio := (Dialog request: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.       ].</do-it><do-it>| anio |[anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.(anio isNil or: [anio between: 2009 and: 2024] )] whileFalse: [             anio := (Dialog request: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.       ].</do-it><do-it>| anio |[anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.(anio isNil or: [anio between: 2009 and: 2024] )] whileFalse: [             anio := (Dialog request: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.       ].</do-it><do-it>| anio |[anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.(anio isNil or: [anio between: 2009 and: 2024] )] whileFalse: [             anio := (Dialog request: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.       ].</do-it><do-it>| anio |[anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.(anio isNil or: [anio between: 2009 and: 2024] )] whileFalse: [             Dialog warn: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)'.       ].</do-it><do-it>| anio |[anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.(anio isNil or: [anio between: 2009 and: 2024] )] whileFalse: [             Dialog warn: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)'.       ].^anio</do-it><do-it>| anio |[anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.(anio isNil or: [anio between: 2009 and: 2024] )] whileFalse: [             Dialog warn: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)'.       ].anio</do-it><do-it>alumno := Alumno new.cursada := Cursada new.</do-it><do-it>| anio |[anio := (Dialog request: ' Ingrese el año de cursado de la materia (valor entre 2009 y 2024)' initialAnswer: ' ' ) asNumber.(anio isNil or: [anio between: 2009 and: 2024] )] whileFalse: [             Dialog warn: ' Año erroneo. Ingrese el año de cursado de la materia (valor entre 2009 y 2024)'.       ].cursada setAño: anio.cursada getAño.</do-it><do-it>cursada getAño.</do-it><do-it>cursada getAño.</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im' 'November 13, 2023' '11:27:30 am')""An image file c:\Users\Alan\Documents\GitHub\ColoquioFinalPLP2023\ejercicio_1\ejercicio_1.im was created at 11:27:30 am on November 13, 2023."</do-it>